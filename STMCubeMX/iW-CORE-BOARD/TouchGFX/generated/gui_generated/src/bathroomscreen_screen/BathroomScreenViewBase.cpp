/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/bathroomscreen_screen/BathroomScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

BathroomScreenViewBase::BathroomScreenViewBase() :
    buttonCallback(this, &BathroomScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BATHROOM_BG_ID));
    add(background);

    buttonBack.setXY(0, 0);
    buttonBack.setBitmaps(touchgfx::Bitmap(BITMAP_GO_BACK_BUTTON_ID), touchgfx::Bitmap(BITMAP_GO_BACK_BUTTON_ID));
    buttonBack.setAction(buttonCallback);
    add(buttonBack);

    imageBathtubUI.setXY(235, 138);
    imageBathtubUI.setBitmap(touchgfx::Bitmap(BITMAP_BATHTUB_DISPLAY_ON_ID));
    imageBathtubUI.setVisible(false);
    add(imageBathtubUI);

    buttonBathtub.setXY(84, 142);
    buttonBathtub.setBitmaps(touchgfx::Bitmap(BITMAP_BATHTUB_GLOW_ID), touchgfx::Bitmap(BITMAP_BATHTUB_GLOW_ID));
    buttonBathtub.setAlpha(0);
    buttonBathtub.setAction(buttonCallback);
    add(buttonBathtub);

    buttonWasher.setXY(360, 0);
    buttonWasher.setBitmaps(touchgfx::Bitmap(BITMAP_WASHING_MACHINE_GLOW_ID), touchgfx::Bitmap(BITMAP_WASHING_MACHINE_GLOW_ID));
    buttonWasher.setAlpha(0);
    buttonWasher.setAction(buttonCallback);
    add(buttonWasher);

    buttonHomeControl.setXY(36, 57);
    buttonHomeControl.setBitmaps(touchgfx::Bitmap(BITMAP_HOMECONTROL_GLOW_ID), touchgfx::Bitmap(BITMAP_HOMECONTROL_GLOW_ID));
    buttonHomeControl.setAlpha(0);
    buttonHomeControl.setAction(buttonCallback);
    add(buttonHomeControl);

    imageBathtubWater.setXY(116, 165);
    imageBathtubWater.setBitmap(touchgfx::Bitmap(BITMAP_BATHTUB_WATER_ON_ID));
    imageBathtubWater.setVisible(false);
    add(imageBathtubWater);

    imageWasherActive.setXY(389, 59);
    imageWasherActive.setBitmap(touchgfx::Bitmap(BITMAP_WASHING_MACHINE_ON_ID));
    imageWasherActive.setVisible(false);
    add(imageWasherActive);

    imageHomeUI.setXY(60, 83);
    imageHomeUI.setBitmap(touchgfx::Bitmap(BITMAP_HOMECONTROL_DISPLAY_ON_ID));
    imageHomeUI.setVisible(false);
    add(imageHomeUI);

    imageWasherUI.setXY(423, 17);
    imageWasherUI.setBitmap(touchgfx::Bitmap(BITMAP_WASHING_MACHINE_DISPLAY_ON_ID));
    imageWasherUI.setVisible(false);
    add(imageWasherUI);
}

BathroomScreenViewBase::~BathroomScreenViewBase()
{

}

void BathroomScreenViewBase::setupScreen()
{

}

void BathroomScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonBack)
    {
        //GoToHallway
        //When buttonBack clicked change screen to HallwayScreen
        //Go to HallwayScreen with screen transition towards West
        application().gotoHallwayScreenScreenWipeTransitionWest();
    }
    if (&src == &buttonWasher)
    {
        //GoToWasher
        //When buttonWasher clicked change screen to WasherScreen
        //Go to WasherScreen with no screen transition
        application().gotoWasherScreenScreenNoTransition();
    }
    if (&src == &buttonBathtub)
    {
        //GoToBathtub
        //When buttonBathtub clicked change screen to BathtubScreen
        //Go to BathtubScreen with no screen transition
        application().gotoBathtubScreenScreenNoTransition();
    }
    if (&src == &buttonHomeControl)
    {
        //GoToHomeControl
        //When buttonHomeControl clicked change screen to HomeControlScreen
        //Go to HomeControlScreen with no screen transition
        application().gotoHomeControlScreenScreenNoTransition();
    }
}

void BathroomScreenViewBase::afterTransition()
{
    //ScreenIsEntered
    //When screen transition ends call virtual function
    //Call startGlowAnimaton
    startGlowAnimaton();
}
