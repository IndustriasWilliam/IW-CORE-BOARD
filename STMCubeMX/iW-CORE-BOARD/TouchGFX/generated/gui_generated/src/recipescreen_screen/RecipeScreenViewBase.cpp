/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/recipescreen_screen/RecipeScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

RecipeScreenViewBase::RecipeScreenViewBase() :
    updateItemCallback(this, &RecipeScreenViewBase::updateItemCallbackHandler),
    flexButtonCallback(this, &RecipeScreenViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 70);
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_UI_BG_ID));
    add(background);

    topbar.setXY(0, 0);
    topbar.setBitmap(touchgfx::Bitmap(BITMAP_TOP_UI_BG_ID));
    add(topbar);

    scrollListRecipeSelector.setPosition(0, 70, 480, 202);
    scrollListRecipeSelector.setHorizontal(false);
    scrollListRecipeSelector.setCircular(false);
    scrollListRecipeSelector.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollListRecipeSelector.setSwipeAcceleration(10);
    scrollListRecipeSelector.setDragAcceleration(10);
    scrollListRecipeSelector.setNumberOfItems(7);
    scrollListRecipeSelector.setPadding(0, 0);
    scrollListRecipeSelector.setSnapping(false);
    scrollListRecipeSelector.setOvershootPercentage(0);
    scrollListRecipeSelector.setDrawableSize(75, 0);
    scrollListRecipeSelector.setDrawables(scrollListRecipeSelectorListItems, updateItemCallback);
    add(scrollListRecipeSelector);

    flexButtonBack.setIconBitmaps(Bitmap(BITMAP_BACK_TOP_UI_ID), Bitmap(BITMAP_BACK_TOP_UI_ID));
    flexButtonBack.setIconXY(11, 13);
    flexButtonBack.setAction(flexButtonCallback);
    flexButtonBack.setPosition(0, 0, 70, 70);
    add(flexButtonBack);

    tiledImageGradientTop.setBitmap(touchgfx::Bitmap(BITMAP_SCROLL_GRADIENT_OVERLAY_ID));
    tiledImageGradientTop.setPosition(0, 70, 480, 27);
    tiledImageGradientTop.setOffset(0, 0);
    add(tiledImageGradientTop);

    tiledImageGradientBottom.setBitmap(touchgfx::Bitmap(BITMAP_SCROLL_GRADIENT_OVERLAY_ID));
    tiledImageGradientBottom.setPosition(0, 212, 480, 60);
    tiledImageGradientBottom.setOffset(0, 114);
    add(tiledImageGradientBottom);
}

RecipeScreenViewBase::~RecipeScreenViewBase()
{

}

void RecipeScreenViewBase::setupScreen()
{
    scrollListRecipeSelector.initialize();
    for (int i = 0; i < scrollListRecipeSelectorListItems.getNumberOfDrawables(); i++)
    {
        scrollListRecipeSelectorListItems[i].initialize();
    }
}

void RecipeScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonBack)
    {
        //InteractionReturnToKitchen
        //When flexButtonBack clicked change screen to HomeControlScreen
        //Go to HomeControlScreen with no screen transition
        application().gotoHomeControlScreenScreenNoTransition();
    }
}

void RecipeScreenViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollListRecipeSelectorListItems)
    {
        scrollListRecipeSelectorUpdateItem(scrollListRecipeSelectorListItems[containerIndex], itemIndex);
    }
}
